[{"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/index.tsx":"1","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/reportWebVitals.ts":"2","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/App.tsx":"3","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/hooks/useCells.tsx":"4","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/helpers/openCells.tsx":"5","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/layouts/Board.tsx":"6","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/context/cells-context.tsx":"7","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Button.tsx":"8","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/DisplayData.tsx":"9","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Settings.tsx":"10"},{"size":500,"mtime":1609855639685,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1609855639690,"results":"13","hashOfConfig":"12"},{"size":926,"mtime":1610036925270,"results":"14","hashOfConfig":"12"},{"size":4749,"mtime":1610036220217,"results":"15","hashOfConfig":"12"},{"size":4012,"mtime":1610028655895,"results":"16","hashOfConfig":"12"},{"size":2122,"mtime":1610013052707,"results":"17","hashOfConfig":"12"},{"size":1427,"mtime":1610036100552,"results":"18","hashOfConfig":"12"},{"size":240,"mtime":1610034786677,"results":"19","hashOfConfig":"12"},{"size":530,"mtime":1610026720446,"results":"20","hashOfConfig":"12"},{"size":1225,"mtime":1610036786413,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1n07qtq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/index.tsx",[],["45","46"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/reportWebVitals.ts",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/App.tsx",["47","48","49"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/hooks/useCells.tsx",["50"],"import { useState, useEffect } from 'react';\n\nexport enum StatusType {\n\tcover,\n\tuncover,\n\tflagged,\n}\n\nexport enum ValueType {\n\tzero = 0,\n\tone = 1,\n\ttwo = 2,\n\tthree,\n\tfour,\n\tfive,\n\tsix,\n\tseven,\n\teight,\n\tbomb,\n}\n\nexport type Cell = {\n\tstatus: StatusType;\n\tvalue: ValueType;\n};\n\nexport function useCells(rows: number, cols: number, bombs: number = 10, setLive: Function, live: boolean) {\n\tconst cellsNo: number = rows * cols;\n\tconst root = document.documentElement;\n\troot.style.setProperty('--cols', `${cols}`);\n\tconst [cells, setCells] = useState<Cell[]>([]);\n\tuseEffect(() => {\n\t\t// step 1: generate plain table\n\t\tlet _cells: Cell[] = Array(...Array(cellsNo)).map((_) => ({\n\t\t\tstatus: StatusType.cover,\n\t\t\tvalue: ValueType.zero,\n\t\t}));\n\n\t\t// step 2: put randomly N-bombs\n\n\t\tlet bombsPlaced = 0;\n\t\twhile (bombsPlaced < bombs) {\n\t\t\tlet bombCellNo = Math.floor(Math.random() * cellsNo);\n\n\t\t\tif (_cells[bombCellNo].value !== ValueType.bomb) {\n\t\t\t\t_cells[bombCellNo].value = ValueType.bomb;\n\t\t\t\tbombsPlaced++;\n\t\t\t} else {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// step 3: put numbers\n\n\t\tfor (let i = 0; i < cellsNo; i++) {\n\t\t\tlet numberOfBombs: number = 0;\n\t\t\tif (_cells[i].value !== ValueType.bomb) {\n\t\t\t\tif (i > 0 && i < cols - 1) {\n\t\t\t\t\t// first row w/o corners\n\t\t\t\t\tif (_cells[i - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else if (i > cellsNo - cols && i < cellsNo - 1) {\n\t\t\t\t\t// last row w/o corners\n\t\t\t\t\tif (_cells[i - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else if (i % cols === 0 && i !== 0 && i !== cellsNo - cols) {\n\t\t\t\t\t// first column w/o corners\n\t\t\t\t\tif (_cells[i + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else if (i % cols === cols - 1 && i !== cols - 1 && i !== cellsNo - 1) {\n\t\t\t\t\t// last column w/o corners\n\t\t\t\t\tif (_cells[i - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// top left corner\n\t\t\t\t\tif (_cells[i + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else if (i === cols - 1) {\n\t\t\t\t\t// top right corner\n\t\t\t\t\tif (_cells[i - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else if (i === cellsNo - cols) {\n\t\t\t\t\t// bottom left corner\n\t\t\t\t\tif (_cells[i + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else if (i === cellsNo - 1) {\n\t\t\t\t\t// bottom right corner\n\t\t\t\t\tif (_cells[i - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t} else {\n\t\t\t\t\t// rest\n\t\t\t\t\tif (_cells[i - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i - cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols - 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t\tif (_cells[i + cols + 1].value === ValueType.bomb) numberOfBombs++;\n\t\t\t\t}\n\t\t\t\t_cells[i].value = numberOfBombs;\n\t\t\t}\n\t\t}\n\n\t\tsetCells(_cells);\n\n\t\tconsole.log(cells);\n\t}, [cols, rows, bombs]);\n\n\treturn { cells, setCells };\n}\n","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/helpers/openCells.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/layouts/Board.tsx",["51","52","53"],"import React, { useState, useEffect } from 'react';\nimport { StatusType, ValueType, Cell, useCells } from '../hooks/useCells';\nimport Quarantine from '../assets/quarantine.svg';\nimport Coronavirus from '../assets/coronavirus.svg';\nimport { useCellsValue } from '../context/cells-context';\nimport { openCells } from '../helpers/openCells';\n\nexport default function Board() {\n\tconst { rows, cols, cells, setCells, live, setLive } = useCellsValue();\n\t// const rows = 15;\n\t// const cols = 15;\n\t// const bombs = 20;\n\t// const { cells, setCells } = useCells(rows, cols, bombs);\n\t// const [live, setLive] = useState(true);\n\n\tconst handleClick = (index: number) => {\n\t\t// e.preventDefault();\n\t\tif (!live) return;\n\n\t\topenCells(index, cells, setCells, cols, rows, setLive);\n\t\t// openCells(index);\n\t};\n\tconst handleRightClick = (index: number) => {\n\t\tif (!live) return;\n\t\tlet _cells: Cell[] = [...cells];\n\t\tif (_cells[index].status !== StatusType.flagged && _cells[index].status === StatusType.cover) {\n\t\t\t_cells[index].status = StatusType.flagged;\n\t\t} else if (_cells[index].status === StatusType.uncover) {\n\t\t\treturn;\n\t\t} else {\n\t\t\t_cells[index].status = StatusType.cover;\n\t\t}\n\t\tsetCells(_cells);\n\t};\n\treturn (\n\t\t<div className=\"board\">\n\t\t\t{cells.map((item, index) => (\n\t\t\t\t<button\n\t\t\t\t\tdisabled={item.status === StatusType.uncover ? true : false}\n\t\t\t\t\tonClick={(e): void => handleClick(index)}\n\t\t\t\t\tonContextMenu={(e): void => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\thandleRightClick(index);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={`board__cell${\n\t\t\t\t\t\titem.status === StatusType.uncover\n\t\t\t\t\t\t\t? ` board__cell--uncover color-${item.value}`\n\t\t\t\t\t\t\t: item.status === StatusType.flagged\n\t\t\t\t\t\t\t? ' board__cell--flagged'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t}`}\n\t\t\t\t\tkey={index}\n\t\t\t\t>\n\t\t\t\t\t{item.status === StatusType.flagged ? (\n\t\t\t\t\t\t<img src={Quarantine} alt=\"React Logo\" />\n\t\t\t\t\t) : item.status === StatusType.uncover && item.value === ValueType.bomb ? (\n\t\t\t\t\t\t<img src={Coronavirus} alt=\"React Logo\" />\n\t\t\t\t\t) : item.status === StatusType.uncover && item.value !== ValueType.zero ? (\n\t\t\t\t\t\t`${item.value}`\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/context/cells-context.tsx",["54","55"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Button.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/DisplayData.tsx",["56"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Settings.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":14,"column":17,"nodeType":"63","messageId":"64","endLine":14,"endColumn":21},{"ruleId":"61","severity":1,"message":"65","line":15,"column":9,"nodeType":"63","messageId":"64","endLine":15,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":15,"column":15,"nodeType":"63","messageId":"64","endLine":15,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":124,"column":5,"nodeType":"69","endLine":124,"endColumn":24,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"71","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"72","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"73","line":2,"column":39,"nodeType":"63","messageId":"64","endLine":2,"endColumn":47},{"ruleId":"61","severity":1,"message":"74","line":41,"column":9,"nodeType":"63","messageId":"64","endLine":41,"endColumn":16},{"ruleId":"61","severity":1,"message":"75","line":41,"column":18,"nodeType":"63","messageId":"64","endLine":41,"endColumn":28},{"ruleId":"61","severity":1,"message":"76","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":19},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'live' is assigned a value but never used.","Identifier","unusedVar","'time' is assigned a value but never used.","'setTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cells' and 'cellsNo'. Either include them or remove the dependency array.","ArrayExpression",["79"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useCells' is defined but never used.","'newGame' is assigned a value but never used.","'setNewGame' is assigned a value but never used.","'constants' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [cols, rows, bombs, cellsNo, cells]",{"range":"82","text":"83"},[4695,4714],"[cols, rows, bombs, cellsNo, cells]"]