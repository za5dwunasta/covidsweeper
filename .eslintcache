[{"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/index.tsx":"1","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/reportWebVitals.ts":"2","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/App.tsx":"3","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/hooks/useCells.tsx":"4","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/helpers/openCells.tsx":"5","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/layouts/Board.tsx":"6","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/context/cells-context.tsx":"7","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Button.tsx":"8","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/DisplayData.tsx":"9","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Settings.tsx":"10"},{"size":500,"mtime":1609855639685,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1609855639690,"results":"13","hashOfConfig":"12"},{"size":926,"mtime":1610036925270,"results":"14","hashOfConfig":"12"},{"size":4886,"mtime":1610046095450,"results":"15","hashOfConfig":"12"},{"size":4012,"mtime":1610028655895,"results":"16","hashOfConfig":"12"},{"size":2122,"mtime":1610013052707,"results":"17","hashOfConfig":"12"},{"size":1561,"mtime":1610037769372,"results":"18","hashOfConfig":"12"},{"size":485,"mtime":1610038926192,"results":"19","hashOfConfig":"12"},{"size":530,"mtime":1610026720446,"results":"20","hashOfConfig":"12"},{"size":1389,"mtime":1610046339006,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1n07qtq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/index.tsx",[],["44","45"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/reportWebVitals.ts",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/App.tsx",["46","47","48"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/hooks/useCells.tsx",["49"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/helpers/openCells.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/layouts/Board.tsx",["50","51","52"],"import React, { useState, useEffect } from 'react';\nimport { StatusType, ValueType, Cell, useCells } from '../hooks/useCells';\nimport Quarantine from '../assets/quarantine.svg';\nimport Coronavirus from '../assets/coronavirus.svg';\nimport { useCellsValue } from '../context/cells-context';\nimport { openCells } from '../helpers/openCells';\n\nexport default function Board() {\n\tconst { rows, cols, cells, setCells, live, setLive } = useCellsValue();\n\t// const rows = 15;\n\t// const cols = 15;\n\t// const bombs = 20;\n\t// const { cells, setCells } = useCells(rows, cols, bombs);\n\t// const [live, setLive] = useState(true);\n\n\tconst handleClick = (index: number) => {\n\t\t// e.preventDefault();\n\t\tif (!live) return;\n\n\t\topenCells(index, cells, setCells, cols, rows, setLive);\n\t\t// openCells(index);\n\t};\n\tconst handleRightClick = (index: number) => {\n\t\tif (!live) return;\n\t\tlet _cells: Cell[] = [...cells];\n\t\tif (_cells[index].status !== StatusType.flagged && _cells[index].status === StatusType.cover) {\n\t\t\t_cells[index].status = StatusType.flagged;\n\t\t} else if (_cells[index].status === StatusType.uncover) {\n\t\t\treturn;\n\t\t} else {\n\t\t\t_cells[index].status = StatusType.cover;\n\t\t}\n\t\tsetCells(_cells);\n\t};\n\treturn (\n\t\t<div className=\"board\">\n\t\t\t{cells.map((item, index) => (\n\t\t\t\t<button\n\t\t\t\t\tdisabled={item.status === StatusType.uncover ? true : false}\n\t\t\t\t\tonClick={(e): void => handleClick(index)}\n\t\t\t\t\tonContextMenu={(e): void => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\thandleRightClick(index);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={`board__cell${\n\t\t\t\t\t\titem.status === StatusType.uncover\n\t\t\t\t\t\t\t? ` board__cell--uncover color-${item.value}`\n\t\t\t\t\t\t\t: item.status === StatusType.flagged\n\t\t\t\t\t\t\t? ' board__cell--flagged'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t}`}\n\t\t\t\t\tkey={index}\n\t\t\t\t>\n\t\t\t\t\t{item.status === StatusType.flagged ? (\n\t\t\t\t\t\t<img src={Quarantine} alt=\"React Logo\" />\n\t\t\t\t\t) : item.status === StatusType.uncover && item.value === ValueType.bomb ? (\n\t\t\t\t\t\t<img src={Coronavirus} alt=\"React Logo\" />\n\t\t\t\t\t) : item.status === StatusType.uncover && item.value !== ValueType.zero ? (\n\t\t\t\t\t\t`${item.value}`\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/context/cells-context.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Button.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/DisplayData.tsx",["53"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Settings.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":14,"column":17,"nodeType":"60","messageId":"61","endLine":14,"endColumn":21},{"ruleId":"58","severity":1,"message":"62","line":15,"column":9,"nodeType":"60","messageId":"61","endLine":15,"endColumn":13},{"ruleId":"58","severity":1,"message":"63","line":15,"column":15,"nodeType":"60","messageId":"61","endLine":15,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":129,"column":5,"nodeType":"66","endLine":129,"endColumn":33,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"68","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"69","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"70","line":2,"column":39,"nodeType":"60","messageId":"61","endLine":2,"endColumn":47},{"ruleId":"58","severity":1,"message":"71","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":19},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"@typescript-eslint/no-unused-vars","'live' is assigned a value but never used.","Identifier","unusedVar","'time' is assigned a value but never used.","'setTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cells', 'cellsNo', and 'setRefresh'. Either include them or remove the dependency array. If 'setRefresh' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["74"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useCells' is defined but never used.","'constants' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [cols, rows, bombs, refresh, cellsNo, setRefresh, cells]",{"range":"77","text":"78"},[4823,4851],"[cols, rows, bombs, refresh, cellsNo, setRefresh, cells]"]