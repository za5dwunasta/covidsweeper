[{"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/index.tsx":"1","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/reportWebVitals.ts":"2","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/App.tsx":"3","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/hooks/useCells.tsx":"4","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/helpers/openCells.tsx":"5","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/layouts/Board.tsx":"6","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/context/cells-context.tsx":"7","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Button.tsx":"8","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/DisplayData.tsx":"9","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Settings.tsx":"10"},{"size":590,"mtime":1610099525040,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1609855639690,"results":"13","hashOfConfig":"12"},{"size":1012,"mtime":1610100210248,"results":"14","hashOfConfig":"12"},{"size":4848,"mtime":1610100640830,"results":"15","hashOfConfig":"12"},{"size":3994,"mtime":1610046480141,"results":"16","hashOfConfig":"12"},{"size":2229,"mtime":1610100319875,"results":"17","hashOfConfig":"12"},{"size":1925,"mtime":1610100609528,"results":"18","hashOfConfig":"12"},{"size":508,"mtime":1610100401539,"results":"19","hashOfConfig":"12"},{"size":523,"mtime":1610099618726,"results":"20","hashOfConfig":"12"},{"size":1857,"mtime":1610116737672,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1n07qtq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/index.tsx",[],["45","46"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/reportWebVitals.ts",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/App.tsx",["47","48"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/hooks/useCells.tsx",["49"],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/helpers/openCells.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/layouts/Board.tsx",["50","51","52"],"import React, { useState, useEffect } from 'react';\nimport { StatusType, ValueType, Cell, useCells } from '../hooks/useCells';\nimport Quarantine from '../assets/quarantine.svg';\nimport Coronavirus from '../assets/coronavirus.svg';\nimport { useCellsValue } from '../context/cells-context';\nimport { openCells } from '../helpers/openCells';\n\nexport default function Board() {\n\tconst { rows, cols, cells, setCells, live, setLive, bombsDisplay, setBombsDisplay } = useCellsValue();\n\t// const rows = 15;\n\t// const cols = 15;\n\t// const bombs = 20;\n\t// const { cells, setCells } = useCells(rows, cols, bombs);\n\t// const [live, setLive] = useState(true);\n\n\tconst handleClick = (index: number) => {\n\t\t// e.preventDefault();\n\t\tif (!live) return;\n\n\t\topenCells(index, cells, setCells, cols, rows, setLive);\n\t\t// openCells(index);\n\t};\n\tconst handleRightClick = (index: number) => {\n\t\tif (!live) return;\n\t\tlet _cells: Cell[] = [...cells];\n\t\tif (_cells[index].status !== StatusType.flagged && _cells[index].status === StatusType.cover) {\n\t\t\t_cells[index].status = StatusType.flagged;\n\t\t\tsetBombsDisplay(bombsDisplay - 1);\n\t\t} else if (_cells[index].status === StatusType.uncover) {\n\t\t\treturn;\n\t\t} else {\n\t\t\t_cells[index].status = StatusType.cover;\n\t\t\tsetBombsDisplay(bombsDisplay + 1);\n\t\t}\n\t\tsetCells(_cells);\n\t};\n\treturn (\n\t\t<div className=\"board\">\n\t\t\t{cells.map((item, index) => (\n\t\t\t\t<button\n\t\t\t\t\tdisabled={item.status === StatusType.uncover ? true : false}\n\t\t\t\t\tonClick={(e): void => handleClick(index)}\n\t\t\t\t\tonContextMenu={(e): void => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\thandleRightClick(index);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={`board__cell${\n\t\t\t\t\t\titem.status === StatusType.uncover\n\t\t\t\t\t\t\t? ` board__cell--uncover color-${item.value}`\n\t\t\t\t\t\t\t: item.status === StatusType.flagged\n\t\t\t\t\t\t\t? ' board__cell--flagged'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t}`}\n\t\t\t\t\tkey={index}\n\t\t\t\t>\n\t\t\t\t\t{item.status === StatusType.flagged ? (\n\t\t\t\t\t\t<img src={Quarantine} alt=\"React Logo\" />\n\t\t\t\t\t) : item.status === StatusType.uncover && item.value === ValueType.bomb ? (\n\t\t\t\t\t\t<img src={Coronavirus} alt=\"React Logo\" />\n\t\t\t\t\t) : item.status === StatusType.uncover && item.value !== ValueType.zero ? (\n\t\t\t\t\t\t`${item.value}`\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/context/cells-context.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Button.tsx",[],"/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/DisplayData.tsx",["53","54"],"import React, { useEffect, useState } from 'react';\nimport './DisplayData.scss';\n\ntype DisplayDataProps = {\n\tdesc: string;\n\tdata: number;\n};\n\nconst DisplayData: React.FunctionComponent<DisplayDataProps> = ({ desc, data }) => {\n\treturn (\n\t\t<div className=\"display-board\">\n\t\t\t<span className=\"display-board__desc\">{desc}</span>\n\t\t\t<div className=\"display-board__data\">\n\t\t\t\t{data < 0 ? `-${Math.abs(data).toString().padStart(2, '0')}` : data.toString().padStart(3, '0')}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DisplayData;\n","/Users/magdalenamotyl/covidsweeper/covidsweeper/src/components/Settings.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":25,"column":5,"nodeType":"65","endLine":25,"endColumn":17,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":133,"column":5,"nodeType":"65","endLine":133,"endColumn":33,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"69","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"70","line":2,"column":39,"nodeType":"61","messageId":"62","endLine":2,"endColumn":47},{"ruleId":"59","severity":1,"message":"69","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTime'. Either include it or remove the dependency array.","ArrayExpression",["73"],"React Hook useEffect has missing dependencies: 'cellsNo', 'setBombsDisplay', and 'setRefresh'. Either include them or remove the dependency array. If 'setBombsDisplay' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["74"],"'useEffect' is defined but never used.","'useCells' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [live, setTime, time]",{"range":"79","text":"80"},"Update the dependencies array to be: [cols, rows, bombs, refresh, cellsNo, setBombsDisplay, setRefresh]",{"range":"81","text":"82"},[609,621],"[live, setTime, time]",[4785,4813],"[cols, rows, bombs, refresh, cellsNo, setBombsDisplay, setRefresh]"]